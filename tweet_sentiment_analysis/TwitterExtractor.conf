# TwitterExtractor configuration file

# Twitter fields (account keys)
# If fields left in blank the connector will fail to connect to twitter
TwitterExtractor.consumerKey = VALUE
TwitterExtractor.consumerSecret = VALUE
TwitterExtractor.accessToken = VALUE
TwitterExtractor.accessTokenSecret = VALUE

# Keywords must be separated by comma
# A comma-separated list of phrases which will be used to determine what Tweets will be delivered on the stream. 
# A phrase may be one or more terms separated by spaces, and a phrase will match if all of the terms in the phrase are present in the Tweet,
# regardless of order and ignoring case. Exact matching of phrases (equivalent to quoted phrases in most search engines) is not supported
# According Twitter4j documentation the default access level allows up to 200 track keywords
# User specific tweets search is not supported
TwitterExtractor.keywords = fcblive, champions league, ucl, championsleague, fcb, fc barcelona, messi, neymar, luis suarez, leo messi, blaugrana, camp nou, campnou, barca, rakitic, jordi alba, viscabarca, visçlbarç , neymarzetes, fcbarca, noucamp, lionelmessi, lionel messi, vamosbarca

# (Optional) Twitter usernames separated by comma. Tweets tweeted by the matching users will be extracted
# According Twitter documentation the default access level allows up to 5000 user track
# If you want only tweets from specific users to be extracted, you can leave the TwitterExtractor.keywords field in blank
# If both fields have information (keywords and usernames) both will apply
TwitterExtractor.usernames =

# Comma separated string in which each value is a desired language
# e.g. en,es for english and spanish
# other languages representation : armenian=hy, dutch=nl, esperanto=eo, french=fr,
# georgian=ka, german=de, greek=el, italian=it, japanese=ja,portuguese=pt,russian=ru,swedish=sv,turkish=tr
TwitterExtractor.languages =en,es

# Filter retweets, if you want all the retweets put the flag filterRT to false, if you want to filter
# them put it to true
TwitterExtractor.filterRT =false


# Only if you are under a proxy, e.g.
# ProxyHost= webcache.example.com , ProxyPort=8080
ProxyHost=
ProxyPort=

# Logging tweets
# If true, log the text of each tweet in the log file. A "true" value can rapidly fill your disk with log messages. 
# Log () will be on project root directory
# If false, just log setup and exception messages
TwitterExtractor.logging = false

# Path of json output files
# The TwitterExtractor.output.files.cleanup specifies whether to remove the JSON files stored in the 
# TwitterExtractor.output.files.directory directory after the data is loaded into HP Vertica. 
# If you want to retain those files, then change the value to false. 
# Note that you may eventually fill up your filesystem with JSON files if you do not manually prune the files on a regular basis
TwitterExtractor.output.files.directory = files/
TwitterExtractor.output.files.cleanup = true

# Batch configurations
# batchTimeInterval refers to the number of seconds between each insertion to DB
# batchSize refers to the number of tweets between each insertion
# e.g. batchTimeInterval=10 and batchSize=80 will insert each 10 seconds OR each 80 tweets gathered whichever comes first
TwitterExtractor.batchTimeInterval = 10
TwitterExtractor.batchSize = 80

# Vertica fields config
TwitterExtractor.Vertica.host = VALUE
TwitterExtractor.Vertica.port = VALUE
TwitterExtractor.Vertica.databaseName = VALUE
TwitterExtractor.Vertica.userName = VALUE
TwitterExtractor.Vertica.password = VALUE

TwitterExtractor.Vertica.tableName = tweets 
TwitterExtractor.Vertica.parserName = TweetParser 
